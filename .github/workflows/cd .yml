name: CD

on:
  workflow_dispatch:
  push:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t path-pilotapi .
          docker tag path-pilotapi:latest ${{ secrets.DOCKER_USERNAME }}/path-pilotapi:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/path-pilotapi:latest

      - name: Create temporary SSH key file
        run: echo "${{ secrets.SSH_KEY }}" > temp_ssh_key.pem

      - name: Set permissions for SSH key file
        run: chmod 600 temp_ssh_key.pem

      - name: Create .env file
        run: |
          echo "MYSQL_HOST=localhost" > .env
          echo "MYSQL_PORT=3306" >> .env
          echo "MYSQL_DATABASE=path-pilot" >> .env
          echo "MYSQL_USER=pathpilot" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env 
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MONGO_HOST=localhost" >> .env
          echo "MONGO_PORT=27017" >> .env
          echo "MONGO_DATABASE=path-pilot" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=root" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env

      - name: Upload files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i temp_ssh_key.pem docker-compose.yml .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/

      - name: Run Docker on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i temp_ssh_key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/path-pilotapi:latest
            sudo docker compose down
            sudo docker compose up -d
          EOF

      - name: Clean up temporary SSH key file
        run: rm temp_ssh_key.pem